// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: journal/journal.proto

package journal

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PageType int32

const (
	PageType_JOURNAL_BEGIN       PageType = 0
	PageType_JOURNAL_END         PageType = 1
	PageType_CONN_BEGIN          PageType = 2
	PageType_CONN_END            PageType = 3
	PageType_HTTP_BEGIN_REQUEST  PageType = 4
	PageType_HTTP_BEGIN_RESPONSE PageType = 5
	PageType_HTTP_DATA_REQUEST   PageType = 6
	PageType_HTTP_DATA_RESPONSE  PageType = 7
	PageType_HTTP_END_REQUEST    PageType = 8
	PageType_HTTP_END_RESPONSE   PageType = 9
)

// Enum value maps for PageType.
var (
	PageType_name = map[int32]string{
		0: "JOURNAL_BEGIN",
		1: "JOURNAL_END",
		2: "CONN_BEGIN",
		3: "CONN_END",
		4: "HTTP_BEGIN_REQUEST",
		5: "HTTP_BEGIN_RESPONSE",
		6: "HTTP_DATA_REQUEST",
		7: "HTTP_DATA_RESPONSE",
		8: "HTTP_END_REQUEST",
		9: "HTTP_END_RESPONSE",
	}
	PageType_value = map[string]int32{
		"JOURNAL_BEGIN":       0,
		"JOURNAL_END":         1,
		"CONN_BEGIN":          2,
		"CONN_END":            3,
		"HTTP_BEGIN_REQUEST":  4,
		"HTTP_BEGIN_RESPONSE": 5,
		"HTTP_DATA_REQUEST":   6,
		"HTTP_DATA_RESPONSE":  7,
		"HTTP_END_REQUEST":    8,
		"HTTP_END_RESPONSE":   9,
	}
)

func (x PageType) Enum() *PageType {
	p := new(PageType)
	*p = x
	return p
}

func (x PageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PageType) Descriptor() protoreflect.EnumDescriptor {
	return file_journal_journal_proto_enumTypes[0].Descriptor()
}

func (PageType) Type() protoreflect.EnumType {
	return &file_journal_journal_proto_enumTypes[0]
}

func (x PageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PageType.Descriptor instead.
func (PageType) EnumDescriptor() ([]byte, []int) {
	return file_journal_journal_proto_rawDescGZIP(), []int{0}
}

type SocketType int32

const (
	SocketType_Dial   SocketType = 0
	SocketType_Accept SocketType = 1
)

// Enum value maps for SocketType.
var (
	SocketType_name = map[int32]string{
		0: "Dial",
		1: "Accept",
	}
	SocketType_value = map[string]int32{
		"Dial":   0,
		"Accept": 1,
	}
)

func (x SocketType) Enum() *SocketType {
	p := new(SocketType)
	*p = x
	return p
}

func (x SocketType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SocketType) Descriptor() protoreflect.EnumDescriptor {
	return file_journal_journal_proto_enumTypes[1].Descriptor()
}

func (SocketType) Type() protoreflect.EnumType {
	return &file_journal_journal_proto_enumTypes[1]
}

func (x SocketType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SocketType.Descriptor instead.
func (SocketType) EnumDescriptor() ([]byte, []int) {
	return file_journal_journal_proto_rawDescGZIP(), []int{1}
}

type HTTPVersion int32

const (
	HTTPVersion_HTTP_1_0 HTTPVersion = 0
	HTTPVersion_HTTP_1_1 HTTPVersion = 1
	HTTPVersion_HTTP_2   HTTPVersion = 2
	HTTPVersion_HTTP_3   HTTPVersion = 3
)

// Enum value maps for HTTPVersion.
var (
	HTTPVersion_name = map[int32]string{
		0: "HTTP_1_0",
		1: "HTTP_1_1",
		2: "HTTP_2",
		3: "HTTP_3",
	}
	HTTPVersion_value = map[string]int32{
		"HTTP_1_0": 0,
		"HTTP_1_1": 1,
		"HTTP_2":   2,
		"HTTP_3":   3,
	}
)

func (x HTTPVersion) Enum() *HTTPVersion {
	p := new(HTTPVersion)
	*p = x
	return p
}

func (x HTTPVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HTTPVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_journal_journal_proto_enumTypes[2].Descriptor()
}

func (HTTPVersion) Type() protoreflect.EnumType {
	return &file_journal_journal_proto_enumTypes[2]
}

func (x HTTPVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HTTPVersion.Descriptor instead.
func (HTTPVersion) EnumDescriptor() ([]byte, []int) {
	return file_journal_journal_proto_rawDescGZIP(), []int{2}
}

type JournalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime    int64  `protobuf:"varint,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Hostname      string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Pid           int64  `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`
	GoArch        string `protobuf:"bytes,4,opt,name=go_arch,json=goArch,proto3" json:"go_arch,omitempty"`
	KernelName    string `protobuf:"bytes,5,opt,name=kernel_name,json=kernelName,proto3" json:"kernel_name,omitempty"`
	KernelVersion string `protobuf:"bytes,6,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"`
	KernelArch    string `protobuf:"bytes,7,opt,name=kernel_arch,json=kernelArch,proto3" json:"kernel_arch,omitempty"`
}

func (x *JournalInfo) Reset() {
	*x = JournalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_journal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JournalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JournalInfo) ProtoMessage() {}

func (x *JournalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_journal_journal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JournalInfo.ProtoReflect.Descriptor instead.
func (*JournalInfo) Descriptor() ([]byte, []int) {
	return file_journal_journal_proto_rawDescGZIP(), []int{0}
}

func (x *JournalInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *JournalInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *JournalInfo) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *JournalInfo) GetGoArch() string {
	if x != nil {
		return x.GoArch
	}
	return ""
}

func (x *JournalInfo) GetKernelName() string {
	if x != nil {
		return x.KernelName
	}
	return ""
}

func (x *JournalInfo) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *JournalInfo) GetKernelArch() string {
	if x != nil {
		return x.KernelArch
	}
	return ""
}

type TCPInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SocketType     SocketType `protobuf:"varint,1,opt,name=socket_type,json=socketType,proto3,enum=SocketType" json:"socket_type,omitempty"`
	CreateTime     int64      `protobuf:"varint,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	ConnectTime    int64      `protobuf:"varint,3,opt,name=connect_time,json=connectTime,proto3" json:"connect_time,omitempty"`
	TraceeBindAddr string     `protobuf:"bytes,4,opt,name=tracee_bind_addr,json=traceeBindAddr,proto3" json:"tracee_bind_addr,omitempty"`
	RemotePeerAddr string     `protobuf:"bytes,5,opt,name=remote_peer_addr,json=remotePeerAddr,proto3" json:"remote_peer_addr,omitempty"`
}

func (x *TCPInfo) Reset() {
	*x = TCPInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_journal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCPInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCPInfo) ProtoMessage() {}

func (x *TCPInfo) ProtoReflect() protoreflect.Message {
	mi := &file_journal_journal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCPInfo.ProtoReflect.Descriptor instead.
func (*TCPInfo) Descriptor() ([]byte, []int) {
	return file_journal_journal_proto_rawDescGZIP(), []int{1}
}

func (x *TCPInfo) GetSocketType() SocketType {
	if x != nil {
		return x.SocketType
	}
	return SocketType_Dial
}

func (x *TCPInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *TCPInfo) GetConnectTime() int64 {
	if x != nil {
		return x.ConnectTime
	}
	return 0
}

func (x *TCPInfo) GetTraceeBindAddr() string {
	if x != nil {
		return x.TraceeBindAddr
	}
	return ""
}

func (x *TCPInfo) GetRemotePeerAddr() string {
	if x != nil {
		return x.RemotePeerAddr
	}
	return ""
}

type TLSInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerName               string   `protobuf:"bytes,1,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	HandshakeBeginTime       int64    `protobuf:"varint,2,opt,name=handshake_begin_time,json=handshakeBeginTime,proto3" json:"handshake_begin_time,omitempty"`
	HandshakeEndTime         int64    `protobuf:"varint,3,opt,name=handshake_end_time,json=handshakeEndTime,proto3" json:"handshake_end_time,omitempty"`
	ClientVersions           []int32  `protobuf:"varint,4,rep,packed,name=client_versions,json=clientVersions,proto3" json:"client_versions,omitempty"`
	ClientCipherSuites       []int32  `protobuf:"varint,5,rep,packed,name=client_cipher_suites,json=clientCipherSuites,proto3" json:"client_cipher_suites,omitempty"`
	ClientSupportedProtocols []string `protobuf:"bytes,6,rep,name=client_supported_protocols,json=clientSupportedProtocols,proto3" json:"client_supported_protocols,omitempty"`
	NegotiatedVersion        int32    `protobuf:"varint,7,opt,name=negotiated_version,json=negotiatedVersion,proto3" json:"negotiated_version,omitempty"`
	NegotiatedCipherSuite    int32    `protobuf:"varint,8,opt,name=negotiated_cipher_suite,json=negotiatedCipherSuite,proto3" json:"negotiated_cipher_suite,omitempty"`
	NegotiatedProtocol       string   `protobuf:"bytes,9,opt,name=negotiated_protocol,json=negotiatedProtocol,proto3" json:"negotiated_protocol,omitempty"`
}

func (x *TLSInfo) Reset() {
	*x = TLSInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_journal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSInfo) ProtoMessage() {}

func (x *TLSInfo) ProtoReflect() protoreflect.Message {
	mi := &file_journal_journal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSInfo.ProtoReflect.Descriptor instead.
func (*TLSInfo) Descriptor() ([]byte, []int) {
	return file_journal_journal_proto_rawDescGZIP(), []int{2}
}

func (x *TLSInfo) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *TLSInfo) GetHandshakeBeginTime() int64 {
	if x != nil {
		return x.HandshakeBeginTime
	}
	return 0
}

func (x *TLSInfo) GetHandshakeEndTime() int64 {
	if x != nil {
		return x.HandshakeEndTime
	}
	return 0
}

func (x *TLSInfo) GetClientVersions() []int32 {
	if x != nil {
		return x.ClientVersions
	}
	return nil
}

func (x *TLSInfo) GetClientCipherSuites() []int32 {
	if x != nil {
		return x.ClientCipherSuites
	}
	return nil
}

func (x *TLSInfo) GetClientSupportedProtocols() []string {
	if x != nil {
		return x.ClientSupportedProtocols
	}
	return nil
}

func (x *TLSInfo) GetNegotiatedVersion() int32 {
	if x != nil {
		return x.NegotiatedVersion
	}
	return 0
}

func (x *TLSInfo) GetNegotiatedCipherSuite() int32 {
	if x != nil {
		return x.NegotiatedCipherSuite
	}
	return 0
}

func (x *TLSInfo) GetNegotiatedProtocol() string {
	if x != nil {
		return x.NegotiatedProtocol
	}
	return ""
}

type ConnBegin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TcpInfo *TCPInfo `protobuf:"bytes,1,opt,name=tcp_info,json=tcpInfo,proto3" json:"tcp_info,omitempty"`
	TlsInfo *TLSInfo `protobuf:"bytes,2,opt,name=tls_info,json=tlsInfo,proto3" json:"tls_info,omitempty"`
}

func (x *ConnBegin) Reset() {
	*x = ConnBegin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_journal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnBegin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnBegin) ProtoMessage() {}

func (x *ConnBegin) ProtoReflect() protoreflect.Message {
	mi := &file_journal_journal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnBegin.ProtoReflect.Descriptor instead.
func (*ConnBegin) Descriptor() ([]byte, []int) {
	return file_journal_journal_proto_rawDescGZIP(), []int{3}
}

func (x *ConnBegin) GetTcpInfo() *TCPInfo {
	if x != nil {
		return x.TcpInfo
	}
	return nil
}

func (x *ConnBegin) GetTlsInfo() *TLSInfo {
	if x != nil {
		return x.TlsInfo
	}
	return nil
}

type ConnEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TcpCloseTime int64 `protobuf:"varint,1,opt,name=tcp_close_time,json=tcpCloseTime,proto3" json:"tcp_close_time,omitempty"`
}

func (x *ConnEnd) Reset() {
	*x = ConnEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_journal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnEnd) ProtoMessage() {}

func (x *ConnEnd) ProtoReflect() protoreflect.Message {
	mi := &file_journal_journal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnEnd.ProtoReflect.Descriptor instead.
func (*ConnEnd) Descriptor() ([]byte, []int) {
	return file_journal_journal_proto_rawDescGZIP(), []int{4}
}

func (x *ConnEnd) GetTcpCloseTime() int64 {
	if x != nil {
		return x.TcpCloseTime
	}
	return 0
}

type HTTPBegin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnId      []byte      `protobuf:"bytes,1,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"`
	BeginTime   int64       `protobuf:"varint,2,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"`
	HttpVersion HTTPVersion `protobuf:"varint,3,opt,name=http_version,json=httpVersion,proto3,enum=HTTPVersion" json:"http_version,omitempty"`
}

func (x *HTTPBegin) Reset() {
	*x = HTTPBegin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_journal_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPBegin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPBegin) ProtoMessage() {}

func (x *HTTPBegin) ProtoReflect() protoreflect.Message {
	mi := &file_journal_journal_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPBegin.ProtoReflect.Descriptor instead.
func (*HTTPBegin) Descriptor() ([]byte, []int) {
	return file_journal_journal_proto_rawDescGZIP(), []int{5}
}

func (x *HTTPBegin) GetConnId() []byte {
	if x != nil {
		return x.ConnId
	}
	return nil
}

func (x *HTTPBegin) GetBeginTime() int64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *HTTPBegin) GetHttpVersion() HTTPVersion {
	if x != nil {
		return x.HttpVersion
	}
	return HTTPVersion_HTTP_1_0
}

type HTTPEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndTime int64 `protobuf:"varint,1,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *HTTPEnd) Reset() {
	*x = HTTPEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_journal_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPEnd) ProtoMessage() {}

func (x *HTTPEnd) ProtoReflect() protoreflect.Message {
	mi := &file_journal_journal_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPEnd.ProtoReflect.Descriptor instead.
func (*HTTPEnd) Descriptor() ([]byte, []int) {
	return file_journal_journal_proto_rawDescGZIP(), []int{6}
}

func (x *HTTPEnd) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type CreateUpload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateUpload) Reset() {
	*x = CreateUpload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_journal_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUpload) ProtoMessage() {}

func (x *CreateUpload) ProtoReflect() protoreflect.Message {
	mi := &file_journal_journal_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUpload.ProtoReflect.Descriptor instead.
func (*CreateUpload) Descriptor() ([]byte, []int) {
	return file_journal_journal_proto_rawDescGZIP(), []int{7}
}

type FinishUpload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FinishUpload) Reset() {
	*x = FinishUpload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_journal_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishUpload) ProtoMessage() {}

func (x *FinishUpload) ProtoReflect() protoreflect.Message {
	mi := &file_journal_journal_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishUpload.ProtoReflect.Descriptor instead.
func (*FinishUpload) Descriptor() ([]byte, []int) {
	return file_journal_journal_proto_rawDescGZIP(), []int{8}
}

type ListUploads struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListUploads) Reset() {
	*x = ListUploads{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_journal_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUploads) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUploads) ProtoMessage() {}

func (x *ListUploads) ProtoReflect() protoreflect.Message {
	mi := &file_journal_journal_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUploads.ProtoReflect.Descriptor instead.
func (*ListUploads) Descriptor() ([]byte, []int) {
	return file_journal_journal_proto_rawDescGZIP(), []int{9}
}

type CreateUpload_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JournalId string `protobuf:"bytes,1,opt,name=journal_id,json=journalId,proto3" json:"journal_id,omitempty"`
	Size      int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *CreateUpload_Request) Reset() {
	*x = CreateUpload_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_journal_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUpload_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUpload_Request) ProtoMessage() {}

func (x *CreateUpload_Request) ProtoReflect() protoreflect.Message {
	mi := &file_journal_journal_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUpload_Request.ProtoReflect.Descriptor instead.
func (*CreateUpload_Request) Descriptor() ([]byte, []int) {
	return file_journal_journal_proto_rawDescGZIP(), []int{7, 0}
}

func (x *CreateUpload_Request) GetJournalId() string {
	if x != nil {
		return x.JournalId
	}
	return ""
}

func (x *CreateUpload_Request) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type CreateUpload_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     string `protobuf:"bytes,1000,opt,name=error,proto3" json:"error,omitempty"`
	UploadId  string `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	UploadUrl string `protobuf:"bytes,2,opt,name=upload_url,json=uploadUrl,proto3" json:"upload_url,omitempty"`
}

func (x *CreateUpload_Response) Reset() {
	*x = CreateUpload_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_journal_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUpload_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUpload_Response) ProtoMessage() {}

func (x *CreateUpload_Response) ProtoReflect() protoreflect.Message {
	mi := &file_journal_journal_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUpload_Response.ProtoReflect.Descriptor instead.
func (*CreateUpload_Response) Descriptor() ([]byte, []int) {
	return file_journal_journal_proto_rawDescGZIP(), []int{7, 1}
}

func (x *CreateUpload_Response) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CreateUpload_Response) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *CreateUpload_Response) GetUploadUrl() string {
	if x != nil {
		return x.UploadUrl
	}
	return ""
}

type FinishUpload_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadId string `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
}

func (x *FinishUpload_Request) Reset() {
	*x = FinishUpload_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_journal_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishUpload_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishUpload_Request) ProtoMessage() {}

func (x *FinishUpload_Request) ProtoReflect() protoreflect.Message {
	mi := &file_journal_journal_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishUpload_Request.ProtoReflect.Descriptor instead.
func (*FinishUpload_Request) Descriptor() ([]byte, []int) {
	return file_journal_journal_proto_rawDescGZIP(), []int{8, 0}
}

func (x *FinishUpload_Request) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

type FinishUpload_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1000,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *FinishUpload_Response) Reset() {
	*x = FinishUpload_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_journal_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishUpload_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishUpload_Response) ProtoMessage() {}

func (x *FinishUpload_Response) ProtoReflect() protoreflect.Message {
	mi := &file_journal_journal_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishUpload_Response.ProtoReflect.Descriptor instead.
func (*FinishUpload_Response) Descriptor() ([]byte, []int) {
	return file_journal_journal_proto_rawDescGZIP(), []int{8, 1}
}

func (x *FinishUpload_Response) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListUploads_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinishAfterTime int64 `protobuf:"varint,1,opt,name=finish_after_time,json=finishAfterTime,proto3" json:"finish_after_time,omitempty"`
}

func (x *ListUploads_Request) Reset() {
	*x = ListUploads_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_journal_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUploads_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUploads_Request) ProtoMessage() {}

func (x *ListUploads_Request) ProtoReflect() protoreflect.Message {
	mi := &file_journal_journal_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUploads_Request.ProtoReflect.Descriptor instead.
func (*ListUploads_Request) Descriptor() ([]byte, []int) {
	return file_journal_journal_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ListUploads_Request) GetFinishAfterTime() int64 {
	if x != nil {
		return x.FinishAfterTime
	}
	return 0
}

type ListUploads_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JournalId string `protobuf:"bytes,1,opt,name=journal_id,json=journalId,proto3" json:"journal_id,omitempty"`
	UploadId  string `protobuf:"bytes,2,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	Url       string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ListUploads_Item) Reset() {
	*x = ListUploads_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_journal_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUploads_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUploads_Item) ProtoMessage() {}

func (x *ListUploads_Item) ProtoReflect() protoreflect.Message {
	mi := &file_journal_journal_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUploads_Item.ProtoReflect.Descriptor instead.
func (*ListUploads_Item) Descriptor() ([]byte, []int) {
	return file_journal_journal_proto_rawDescGZIP(), []int{9, 1}
}

func (x *ListUploads_Item) GetJournalId() string {
	if x != nil {
		return x.JournalId
	}
	return ""
}

func (x *ListUploads_Item) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *ListUploads_Item) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ListUploads_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string              `protobuf:"bytes,1000,opt,name=error,proto3" json:"error,omitempty"`
	Items []*ListUploads_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListUploads_Response) Reset() {
	*x = ListUploads_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_journal_journal_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUploads_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUploads_Response) ProtoMessage() {}

func (x *ListUploads_Response) ProtoReflect() protoreflect.Message {
	mi := &file_journal_journal_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUploads_Response.ProtoReflect.Descriptor instead.
func (*ListUploads_Response) Descriptor() ([]byte, []int) {
	return file_journal_journal_proto_rawDescGZIP(), []int{9, 2}
}

func (x *ListUploads_Response) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ListUploads_Response) GetItems() []*ListUploads_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_journal_journal_proto protoreflect.FileDescriptor

var file_journal_journal_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xde, 0x01, 0x0a, 0x0b, 0x4a, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x6f, 0x5f, 0x61, 0x72, 0x63,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x6f, 0x41, 0x72, 0x63, 0x68, 0x12,
	0x1f, 0x0a, 0x0b, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6b, 0x65, 0x72, 0x6e, 0x65,
	0x6c, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6b, 0x65,
	0x72, 0x6e, 0x65, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x22, 0xcf, 0x01, 0x0a, 0x07, 0x54, 0x43, 0x50,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x0b, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x53, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65,
	0x5f, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x50, 0x65, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x22, 0xbb, 0x03, 0x0a, 0x07, 0x54,
	0x4c, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x68, 0x61, 0x6e, 0x64, 0x73,
	0x68, 0x61, 0x6b, 0x65, 0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65,
	0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x68, 0x61, 0x6e,
	0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x30, 0x0a, 0x14, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x69, 0x70, 0x68, 0x65,
	0x72, 0x5f, 0x73, 0x75, 0x69, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x12,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x53, 0x75, 0x69, 0x74,
	0x65, 0x73, 0x12, 0x3c, 0x0a, 0x1a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x18, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x12, 0x2d, 0x0a, 0x12, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6e, 0x65,
	0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x36, 0x0a, 0x17, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x69,
	0x70, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x69, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x15, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x43, 0x69, 0x70, 0x68,
	0x65, 0x72, 0x53, 0x75, 0x69, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x6e, 0x65, 0x67, 0x6f, 0x74,
	0x69, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x55, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e,
	0x42, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x08, 0x74, 0x63, 0x70, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x54, 0x43, 0x50, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x74, 0x63, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x08, 0x74, 0x6c,
	0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x54,
	0x4c, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x74, 0x6c, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x2f, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x45, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x63,
	0x70, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x74, 0x63, 0x70, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x74, 0x0a, 0x09, 0x48, 0x54, 0x54, 0x50, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x48, 0x54,
	0x54, 0x50, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x24, 0x0a, 0x07, 0x48, 0x54, 0x54, 0x50, 0x45, 0x6e,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xab, 0x01, 0x0a,
	0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x3c, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x1a, 0x5d, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x22, 0x59, 0x0a, 0x0c, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x26, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x64, 0x1a, 0x21, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xe6, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x73, 0x1a, 0x35, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x54, 0x0a, 0x04,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x1a, 0x4a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2a, 0xd9,
	0x01, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x4a,
	0x4f, 0x55, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x0f,
	0x0a, 0x0b, 0x4a, 0x4f, 0x55, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4e, 0x4e, 0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x10, 0x02, 0x12,
	0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4e, 0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x16, 0x0a,
	0x12, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x42, 0x45,
	0x47, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x05, 0x12, 0x15,
	0x0a, 0x11, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x07, 0x12, 0x14, 0x0a,
	0x10, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x45, 0x4e, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x45, 0x4e, 0x44, 0x5f,
	0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x09, 0x2a, 0x22, 0x0a, 0x0a, 0x53, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x69, 0x61, 0x6c,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x10, 0x01, 0x2a, 0x41,
	0x0a, 0x0b, 0x48, 0x54, 0x54, 0x50, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a,
	0x08, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x31, 0x5f, 0x30, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x48,
	0x54, 0x54, 0x50, 0x5f, 0x31, 0x5f, 0x31, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x54, 0x54,
	0x50, 0x5f, 0x32, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x33, 0x10,
	0x03, 0x42, 0x1a, 0x5a, 0x18, 0x73, 0x75, 0x62, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x64, 0x65,
	0x76, 0x2f, 0x63, 0x6c, 0x69, 0x2f, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_journal_journal_proto_rawDescOnce sync.Once
	file_journal_journal_proto_rawDescData = file_journal_journal_proto_rawDesc
)

func file_journal_journal_proto_rawDescGZIP() []byte {
	file_journal_journal_proto_rawDescOnce.Do(func() {
		file_journal_journal_proto_rawDescData = protoimpl.X.CompressGZIP(file_journal_journal_proto_rawDescData)
	})
	return file_journal_journal_proto_rawDescData
}

var file_journal_journal_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_journal_journal_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_journal_journal_proto_goTypes = []interface{}{
	(PageType)(0),                 // 0: PageType
	(SocketType)(0),               // 1: SocketType
	(HTTPVersion)(0),              // 2: HTTPVersion
	(*JournalInfo)(nil),           // 3: JournalInfo
	(*TCPInfo)(nil),               // 4: TCPInfo
	(*TLSInfo)(nil),               // 5: TLSInfo
	(*ConnBegin)(nil),             // 6: ConnBegin
	(*ConnEnd)(nil),               // 7: ConnEnd
	(*HTTPBegin)(nil),             // 8: HTTPBegin
	(*HTTPEnd)(nil),               // 9: HTTPEnd
	(*CreateUpload)(nil),          // 10: CreateUpload
	(*FinishUpload)(nil),          // 11: FinishUpload
	(*ListUploads)(nil),           // 12: ListUploads
	(*CreateUpload_Request)(nil),  // 13: CreateUpload.Request
	(*CreateUpload_Response)(nil), // 14: CreateUpload.Response
	(*FinishUpload_Request)(nil),  // 15: FinishUpload.Request
	(*FinishUpload_Response)(nil), // 16: FinishUpload.Response
	(*ListUploads_Request)(nil),   // 17: ListUploads.Request
	(*ListUploads_Item)(nil),      // 18: ListUploads.Item
	(*ListUploads_Response)(nil),  // 19: ListUploads.Response
}
var file_journal_journal_proto_depIdxs = []int32{
	1,  // 0: TCPInfo.socket_type:type_name -> SocketType
	4,  // 1: ConnBegin.tcp_info:type_name -> TCPInfo
	5,  // 2: ConnBegin.tls_info:type_name -> TLSInfo
	2,  // 3: HTTPBegin.http_version:type_name -> HTTPVersion
	18, // 4: ListUploads.Response.items:type_name -> ListUploads.Item
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_journal_journal_proto_init() }
func file_journal_journal_proto_init() {
	if File_journal_journal_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_journal_journal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JournalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_journal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCPInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_journal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_journal_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnBegin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_journal_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_journal_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPBegin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_journal_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_journal_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUpload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_journal_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishUpload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_journal_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUploads); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_journal_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUpload_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_journal_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUpload_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_journal_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishUpload_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_journal_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishUpload_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_journal_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUploads_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_journal_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUploads_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_journal_journal_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUploads_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_journal_journal_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_journal_journal_proto_goTypes,
		DependencyIndexes: file_journal_journal_proto_depIdxs,
		EnumInfos:         file_journal_journal_proto_enumTypes,
		MessageInfos:      file_journal_journal_proto_msgTypes,
	}.Build()
	File_journal_journal_proto = out.File
	file_journal_journal_proto_rawDesc = nil
	file_journal_journal_proto_goTypes = nil
	file_journal_journal_proto_depIdxs = nil
}
