syntax = "proto3";

option go_package = "subtrace.dev/cli/journal";

enum PageType {
  JOURNAL_BEGIN       = 0;
  JOURNAL_END         = 1;
  CONN_BEGIN          = 2;
  CONN_END            = 3;
  HTTP_BEGIN_REQUEST  = 4;
  HTTP_BEGIN_RESPONSE = 5;
  HTTP_DATA_REQUEST   = 6;
  HTTP_DATA_RESPONSE  = 7;
  HTTP_END_REQUEST    = 8;
  HTTP_END_RESPONSE   = 9;
}

message JournalInfo {
  int64 create_time = 1;
  string hostname = 2;
  int64 pid = 3;
  string go_arch = 4;
  string kernel_name = 5;
  string kernel_version = 6;
  string kernel_arch = 7;
}

enum SocketType {
  Dial   = 0;
  Accept = 1;
}

message TCPInfo {
  SocketType socket_type = 1;
  int64 create_time = 2;
  int64 connect_time = 3;
  string tracee_bind_addr = 4;
  string remote_peer_addr = 5;
}

message TLSInfo {
  string server_name = 1;
  int64 handshake_begin_time = 2;
  int64 handshake_end_time = 3;
  repeated int32 client_versions = 4;
  repeated int32 client_cipher_suites = 5;
  repeated string client_supported_protocols = 6;
  int32 negotiated_version = 7;
  int32 negotiated_cipher_suite = 8;
  string negotiated_protocol = 9;
}

message ConnBegin {
  TCPInfo tcp_info = 1;
  TLSInfo tls_info = 2;
}

message ConnEnd {
  int64 tcp_close_time = 1;
}

enum HTTPVersion {
  HTTP_1_0 = 0;
  HTTP_1_1 = 1;
  HTTP_2   = 2;
  HTTP_3   = 3;
}

message HTTPBegin {
  bytes conn_id = 1;
  int64 begin_time = 2;
  HTTPVersion http_version = 3;
}

message HTTPEnd {
  int64 end_time = 1;
}

message CreateUpload {
  message Request {
    string journal_id = 1;
    int64 size = 2;
  }

  message Response {
    string error = 1000;
    string upload_id = 1;
    string upload_url = 2;
  }
}

message FinishUpload {
  message Request {
    string upload_id = 1;
  }

  message Response {
    string error = 1000;
  }
}

message ListUploads {
  message Request {
    int64 finish_after_time = 1;
  }

  message Item {
    string journal_id = 1;
    string upload_id = 2;
    string url = 3;
  }

  message Response {
    string error = 1000;
    repeated Item items = 1;
  }
}
